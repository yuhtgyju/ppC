name: CMake Build

on:
  push:
    branches: [ main ]
    tags: [ '*' ]  # Trigger on tag push
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Create build directory
        run: cmake -E make_directory build

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_CXX_STANDARD=23

      - name: Build
        run: cmake --build build --config Release

      - name: List built files (debugging)
        shell: bash
        run: |
          echo "Contents of build folder:"
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            pwsh -Command "Get-ChildItem -Recurse -Force build"
          else
            ls -al build
          fi

      - name: Rename ++C binary (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mv build/++C build/ppc || echo "Rename skipped (binary not found)"

      - name: Test run binary (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          ./build/ppc || ./build/++C || echo "Binary may have special chars"

      - name: Test run binary (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Get-ChildItem -Recurse -Force build
          .\build\Release\++C.exe || echo "Run failed"
